{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/kenzie/Q2/s5/atividades/react-atividade-s5-login-refatorando-provider-brunotetzner/src/providers/Auth/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const history = useHistory(); // Dessa forma adicionamos ao state o token caso ele exista no localStorage\n\n  const [authToken, setAuthToken] = useState(() => localStorage.getItem(\"token\") || \"\"); // Função para logar na aplicação, recebe os dados pegos do form de login\n\n  const signIn = userData => {\n    axios.post(\"https://kenziehub.herokuapp.com/sessions\", userData).then(response => {\n      // setamos no localStorage o token, caso tenhamos a resposta esperada\n      localStorage.setItem(\"token\", response.data.token); // setamos no state o token, caso tenhamos a resposta esperada\n\n      setAuthToken(response.data.token); // redirecionamos para a página logado\n\n      history.push(\"/dashboard\");\n    }).catch(err => console.log(err));\n  }; // Função para deslogar da aplicação\n\n\n  const Logout = () => {\n    // limpando o localStorage\n    localStorage.clear(); // limpando o state\n\n    setAuthToken(\"\"); // redirecionando para login\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      Logout,\n      signIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"wsv0QoyypPGXpzwvYp6KuFARka0=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/bruno/Documentos/kenzie/Q2/s5/atividades/react-atividade-s5-login-refatorando-provider-brunotetzner/src/providers/Auth/index.tsx"],"names":["createContext","useContext","useState","useHistory","axios","AuthContext","AuthProvider","children","history","authToken","setAuthToken","localStorage","getItem","signIn","userData","post","then","response","setItem","data","token","push","catch","err","console","log","Logout","clear","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAcA,MAAMC,WAAW,gBAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,MAAMM,YAAY,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA;AAAF,GAA6B;AACxD,QAAMC,OAAO,GAAGL,UAAU,EAA1B,CADwD,CAGxD;;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CACxC,MAAMS,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EADC,CAA1C,CAJwD,CAOxD;;AACA,QAAMC,MAAM,GAAIC,QAAD,IAAoB;AACjCV,IAAAA,KAAK,CACFW,IADH,CACQ,0CADR,EACoDD,QADpD,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClB;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BD,QAAQ,CAACE,IAAT,CAAcC,KAA5C,EAFkB,CAGlB;;AACAV,MAAAA,YAAY,CAACO,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAZ,CAJkB,CAKlB;;AACAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,YAAb;AACD,KATH,EAUGC,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZD,CARwD,CAsBxD;;;AACA,QAAMG,MAAM,GAAG,MAAM;AACnB;AACAf,IAAAA,YAAY,CAACgB,KAAb,GAFmB,CAGnB;;AACAjB,IAAAA,YAAY,CAAC,EAAD,CAAZ,CAJmB,CAKnB;;AACAF,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,GAPD;;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,SAAF;AAAaiB,MAAAA,MAAb;AAAqBb,MAAAA;AAArB,KAA7B;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArCM;;GAAMD,Y;UACKH,U;;;KADLG,Y;AAuCb,OAAO,MAAMsB,OAAO,GAAG;AAAA;;AAAA,SAAM3B,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAhB;;IAAMuB,O","sourcesContent":["import { createContext, useContext, useState, ReactNode } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\ninterface LoginProps {\n  children: ReactNode;\n}\ninterface data {\n  email: string;\n  password: string;\n}\ninterface AuthContextData {\n  signIn: (userData: data) => void;\n  Logout: () => void;\n  authToken: string;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider = ({ children }: LoginProps) => {\n  const history = useHistory();\n\n  // Dessa forma adicionamos ao state o token caso ele exista no localStorage\n  const [authToken, setAuthToken] = useState(\n    () => localStorage.getItem(\"token\") || \"\"\n  );\n  // Função para logar na aplicação, recebe os dados pegos do form de login\n  const signIn = (userData: data) => {\n    axios\n      .post(\"https://kenziehub.herokuapp.com/sessions\", userData)\n      .then((response) => {\n        // setamos no localStorage o token, caso tenhamos a resposta esperada\n        localStorage.setItem(\"token\", response.data.token);\n        // setamos no state o token, caso tenhamos a resposta esperada\n        setAuthToken(response.data.token);\n        // redirecionamos para a página logado\n        history.push(\"/dashboard\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Função para deslogar da aplicação\n  const Logout = () => {\n    // limpando o localStorage\n    localStorage.clear();\n    // limpando o state\n    setAuthToken(\"\");\n    // redirecionando para login\n    history.push(\"/\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ authToken, Logout, signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}